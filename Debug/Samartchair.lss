
Samartchair.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000dba  00000e4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  0080007a  0080007a  00000e68  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010f9  00000000  00000000  00000fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000091c  00000000  00000000  000020bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000087d  00000000  00000000  000029d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000288  00000000  00000000  00003258  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052d  00000000  00000000  000034e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000976  00000000  00000000  00003a0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00004383  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__vector_9>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <dtoa_prf+0xca>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__divsf3_pse+0x1a>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <LCD_Char+0x2e>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <hx711_read+0x2e>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ea eb       	ldi	r30, 0xBA	; 186
 162:	fd e0       	ldi	r31, 0x0D	; 13
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	aa 37       	cpi	r26, 0x7A	; 122
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	aa e7       	ldi	r26, 0x7A	; 122
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	a5 38       	cpi	r26, 0x85	; 133
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 57 02 	call	0x4ae	; 0x4ae <main>
 184:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <hx711_read>:
/**
 * calibration step 2 of 2, set the scale
 */
void hx711_calibrate2setscale(double weight) {
	hx711_setscale((hx711_readaverage(HX711_CALIBRATIONREADTIMES)-hx711_offset)/weight);
}
 18c:	b0 99       	sbic	0x16, 0	; 22
 18e:	fe cf       	rjmp	.-4      	; 0x18c <hx711_read>
 190:	f8 94       	cli
 192:	21 e0       	ldi	r18, 0x01	; 1
 194:	40 e0       	ldi	r20, 0x00	; 0
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	ba 01       	movw	r22, r20
 19a:	27 c0       	rjmp	.+78     	; 0x1ea <hx711_read+0x5e>
 19c:	88 b3       	in	r24, 0x18	; 24
 19e:	82 60       	ori	r24, 0x02	; 2
 1a0:	88 bb       	out	0x18, r24	; 24
 1a2:	00 00       	nop
 1a4:	44 0f       	add	r20, r20
 1a6:	55 1f       	adc	r21, r21
 1a8:	66 1f       	adc	r22, r22
 1aa:	77 1f       	adc	r23, r23
 1ac:	88 b3       	in	r24, 0x18	; 24
 1ae:	8d 7f       	andi	r24, 0xFD	; 253
 1b0:	88 bb       	out	0x18, r24	; 24
 1b2:	00 00       	nop
 1b4:	b0 9b       	sbis	0x16, 0	; 22
 1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <hx711_read+0x34>
 1b8:	4f 5f       	subi	r20, 0xFF	; 255
 1ba:	5f 4f       	sbci	r21, 0xFF	; 255
 1bc:	6f 4f       	sbci	r22, 0xFF	; 255
 1be:	7f 4f       	sbci	r23, 0xFF	; 255
 1c0:	9f 5f       	subi	r25, 0xFF	; 255
 1c2:	01 c0       	rjmp	.+2      	; 0x1c6 <hx711_read+0x3a>
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	98 31       	cpi	r25, 0x18	; 24
 1c8:	48 f3       	brcs	.-46     	; 0x19c <hx711_read+0x10>
 1ca:	60 58       	subi	r22, 0x80	; 128
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	08 c0       	rjmp	.+16     	; 0x1e0 <hx711_read+0x54>
 1d0:	88 b3       	in	r24, 0x18	; 24
 1d2:	82 60       	ori	r24, 0x02	; 2
 1d4:	88 bb       	out	0x18, r24	; 24
 1d6:	00 00       	nop
 1d8:	88 b3       	in	r24, 0x18	; 24
 1da:	8d 7f       	andi	r24, 0xFD	; 253
 1dc:	88 bb       	out	0x18, r24	; 24
 1de:	9f 5f       	subi	r25, 0xFF	; 255
 1e0:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <hx711_gain>
 1e4:	20 e0       	ldi	r18, 0x00	; 0
 1e6:	98 17       	cp	r25, r24
 1e8:	98 f3       	brcs	.-26     	; 0x1d0 <hx711_read+0x44>
 1ea:	21 11       	cpse	r18, r1
 1ec:	eb cf       	rjmp	.-42     	; 0x1c4 <hx711_read+0x38>
 1ee:	78 94       	sei
 1f0:	cb 01       	movw	r24, r22
 1f2:	ba 01       	movw	r22, r20
 1f4:	08 95       	ret

000001f6 <hx711_readwithtare>:
 1f6:	8f 92       	push	r8
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	0e 94 c6 00 	call	0x18c	; 0x18c <hx711_read>
 20a:	4b 01       	movw	r8, r22
 20c:	5c 01       	movw	r10, r24
 20e:	60 91 7a 00 	lds	r22, 0x007A	; 0x80007a <__data_end>
 212:	70 91 7b 00 	lds	r23, 0x007B	; 0x80007b <__data_end+0x1>
 216:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__data_end+0x2>
 21a:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <__data_end+0x3>
 21e:	0e 94 9d 03 	call	0x73a	; 0x73a <__floatsisf>
 222:	6b 01       	movw	r12, r22
 224:	7c 01       	movw	r14, r24
 226:	c5 01       	movw	r24, r10
 228:	b4 01       	movw	r22, r8
 22a:	0e 94 9d 03 	call	0x73a	; 0x73a <__floatsisf>
 22e:	a7 01       	movw	r20, r14
 230:	96 01       	movw	r18, r12
 232:	0e 94 bc 02 	call	0x578	; 0x578 <__subsf3>
 236:	ff 90       	pop	r15
 238:	ef 90       	pop	r14
 23a:	df 90       	pop	r13
 23c:	cf 90       	pop	r12
 23e:	bf 90       	pop	r11
 240:	af 90       	pop	r10
 242:	9f 90       	pop	r9
 244:	8f 90       	pop	r8
 246:	08 95       	ret

00000248 <hx711_getweight>:
 248:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <hx711_readwithtare>
 24c:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <hx711_scale>
 250:	30 91 7f 00 	lds	r19, 0x007F	; 0x80007f <hx711_scale+0x1>
 254:	40 91 80 00 	lds	r20, 0x0080	; 0x800080 <hx711_scale+0x2>
 258:	50 91 81 00 	lds	r21, 0x0081	; 0x800081 <hx711_scale+0x3>
 25c:	0e 94 29 03 	call	0x652	; 0x652 <__divsf3>
 260:	08 95       	ret

00000262 <hx711_setgain>:
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	91 05       	cpc	r25, r1
 266:	21 f4       	brne	.+8      	; 0x270 <hx711_setgain+0xe>
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <hx711_gain>
 26e:	10 c0       	rjmp	.+32     	; 0x290 <hx711_setgain+0x2e>
 270:	83 30       	cpi	r24, 0x03	; 3
 272:	91 05       	cpc	r25, r1
 274:	21 f4       	brne	.+8      	; 0x27e <hx711_setgain+0x1c>
 276:	83 e0       	ldi	r24, 0x03	; 3
 278:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <hx711_gain>
 27c:	09 c0       	rjmp	.+18     	; 0x290 <hx711_setgain+0x2e>
 27e:	02 97       	sbiw	r24, 0x02	; 2
 280:	21 f4       	brne	.+8      	; 0x28a <hx711_setgain+0x28>
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <hx711_gain>
 288:	03 c0       	rjmp	.+6      	; 0x290 <hx711_setgain+0x2e>
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <hx711_gain>
 290:	88 b3       	in	r24, 0x18	; 24
 292:	8d 7f       	andi	r24, 0xFD	; 253
 294:	88 bb       	out	0x18, r24	; 24
 296:	0e 94 c6 00 	call	0x18c	; 0x18c <hx711_read>
 29a:	08 95       	ret

0000029c <hx711_setscale>:
 29c:	60 93 7e 00 	sts	0x007E, r22	; 0x80007e <hx711_scale>
 2a0:	70 93 7f 00 	sts	0x007F, r23	; 0x80007f <hx711_scale+0x1>
 2a4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <hx711_scale+0x2>
 2a8:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <hx711_scale+0x3>
 2ac:	08 95       	ret

000002ae <hx711_setoffset>:
 2ae:	60 93 7a 00 	sts	0x007A, r22	; 0x80007a <__data_end>
 2b2:	70 93 7b 00 	sts	0x007B, r23	; 0x80007b <__data_end+0x1>
 2b6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__data_end+0x2>
 2ba:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <__data_end+0x3>
 2be:	08 95       	ret

000002c0 <hx711_init>:

/**
 * initialize chip
 */
void hx711_init(uint8_t gain, double scale, int32_t offset) {
 2c0:	8f 92       	push	r8
 2c2:	9f 92       	push	r9
 2c4:	af 92       	push	r10
 2c6:	bf 92       	push	r11
 2c8:	cf 92       	push	r12
 2ca:	df 92       	push	r13
 2cc:	ef 92       	push	r14
 2ce:	ff 92       	push	r15
 2d0:	0f 93       	push	r16
 2d2:	1f 93       	push	r17
 2d4:	4a 01       	movw	r8, r20
 2d6:	5b 01       	movw	r10, r22
 2d8:	68 01       	movw	r12, r16
 2da:	79 01       	movw	r14, r18
	//set sck as output
	HX711_SCKDDR |= (1<<HX711_SCKPINNUM);
 2dc:	97 b3       	in	r25, 0x17	; 23
 2de:	92 60       	ori	r25, 0x02	; 2
 2e0:	97 bb       	out	0x17, r25	; 23
	HX711_SCKPORT &= ~(1<<HX711_SCKPINNUM);
 2e2:	98 b3       	in	r25, 0x18	; 24
 2e4:	9d 7f       	andi	r25, 0xFD	; 253
 2e6:	98 bb       	out	0x18, r25	; 24
	//set dt as input
	HX711_DTDDR &=~ (1<<HX711_DTPINNUM);
 2e8:	97 b3       	in	r25, 0x17	; 23
 2ea:	9e 7f       	andi	r25, 0xFE	; 254
 2ec:	97 bb       	out	0x17, r25	; 23

	//set gain
	hx711_setgain(gain);
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 31 01 	call	0x262	; 0x262 <hx711_setgain>
	//set scale
	hx711_setscale(scale);
 2f4:	c5 01       	movw	r24, r10
 2f6:	b4 01       	movw	r22, r8
 2f8:	0e 94 4e 01 	call	0x29c	; 0x29c <hx711_setscale>
	//set offset
	hx711_setoffset(offset);
 2fc:	c7 01       	movw	r24, r14
 2fe:	b6 01       	movw	r22, r12
 300:	0e 94 57 01 	call	0x2ae	; 0x2ae <hx711_setoffset>
}
 304:	1f 91       	pop	r17
 306:	0f 91       	pop	r16
 308:	ff 90       	pop	r15
 30a:	ef 90       	pop	r14
 30c:	df 90       	pop	r13
 30e:	cf 90       	pop	r12
 310:	bf 90       	pop	r11
 312:	af 90       	pop	r10
 314:	9f 90       	pop	r9
 316:	8f 90       	pop	r8
 318:	08 95       	ret

0000031a <__vector_9>:
#define HX711_MODECURRENT 1

int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
 31a:	1f 92       	push	r1
 31c:	0f 92       	push	r0
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	0f 92       	push	r0
 322:	11 24       	eor	r1, r1
 324:	8f 93       	push	r24
 326:	9f 93       	push	r25
	TimerOverflow++;	/* Increment Timer Overflow count */
 328:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <TimerOverflow>
 32c:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <TimerOverflow+0x1>
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <TimerOverflow+0x1>
 336:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <TimerOverflow>
}
 33a:	9f 91       	pop	r25
 33c:	8f 91       	pop	r24
 33e:	0f 90       	pop	r0
 340:	0f be       	out	0x3f, r0	; 63
 342:	0f 90       	pop	r0
 344:	1f 90       	pop	r1
 346:	18 95       	reti

00000348 <LCD_Command>:



void LCD_Command( unsigned char cmnd )
{
	LCD_Port = (LCD_Port & 0x0F) | (cmnd & 0xF0); /* sending upper nibble */
 348:	95 b3       	in	r25, 0x15	; 21
 34a:	9f 70       	andi	r25, 0x0F	; 15
 34c:	28 2f       	mov	r18, r24
 34e:	20 7f       	andi	r18, 0xF0	; 240
 350:	92 2b       	or	r25, r18
 352:	95 bb       	out	0x15, r25	; 21
	LCD_Port &= ~ (1<<RS);		/* RS=0, command reg. */
 354:	95 b3       	in	r25, 0x15	; 21
 356:	9e 7f       	andi	r25, 0xFE	; 254
 358:	95 bb       	out	0x15, r25	; 21
	LCD_Port |= (1<<EN);		/* Enable pulse */
 35a:	95 b3       	in	r25, 0x15	; 21
 35c:	92 60       	ori	r25, 0x02	; 2
 35e:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 360:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 362:	95 b3       	in	r25, 0x15	; 21
 364:	9d 7f       	andi	r25, 0xFD	; 253
 366:	95 bb       	out	0x15, r25	; 21
 368:	32 e4       	ldi	r19, 0x42	; 66
 36a:	3a 95       	dec	r19
 36c:	f1 f7       	brne	.-4      	; 0x36a <LCD_Command+0x22>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <LCD_Command+0x28>

	_delay_us(200);

	LCD_Port = (LCD_Port & 0x0F) | (cmnd << 4);  /* sending lower nibble */
 370:	25 b3       	in	r18, 0x15	; 21
 372:	30 e1       	ldi	r19, 0x10	; 16
 374:	83 9f       	mul	r24, r19
 376:	c0 01       	movw	r24, r0
 378:	11 24       	eor	r1, r1
 37a:	92 2f       	mov	r25, r18
 37c:	9f 70       	andi	r25, 0x0F	; 15
 37e:	89 2b       	or	r24, r25
 380:	85 bb       	out	0x15, r24	; 21
	LCD_Port |= (1<<EN);
 382:	85 b3       	in	r24, 0x15	; 21
 384:	82 60       	ori	r24, 0x02	; 2
 386:	85 bb       	out	0x15, r24	; 21
 388:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 38a:	85 b3       	in	r24, 0x15	; 21
 38c:	8d 7f       	andi	r24, 0xFD	; 253
 38e:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 390:	83 ef       	ldi	r24, 0xF3	; 243
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <LCD_Command+0x4c>
 398:	00 c0       	rjmp	.+0      	; 0x39a <LCD_Command+0x52>
 39a:	00 00       	nop
 39c:	08 95       	ret

0000039e <LCD_Char>:
}


void LCD_Char( unsigned char data )
{
	LCD_Port = (LCD_Port & 0x0F) | (data & 0xF0); /* sending upper nibble */
 39e:	95 b3       	in	r25, 0x15	; 21
 3a0:	9f 70       	andi	r25, 0x0F	; 15
 3a2:	28 2f       	mov	r18, r24
 3a4:	20 7f       	andi	r18, 0xF0	; 240
 3a6:	92 2b       	or	r25, r18
 3a8:	95 bb       	out	0x15, r25	; 21
	LCD_Port |= (1<<RS);		/* RS=1, data reg. */
 3aa:	95 b3       	in	r25, 0x15	; 21
 3ac:	91 60       	ori	r25, 0x01	; 1
 3ae:	95 bb       	out	0x15, r25	; 21
	LCD_Port|= (1<<EN);
 3b0:	95 b3       	in	r25, 0x15	; 21
 3b2:	92 60       	ori	r25, 0x02	; 2
 3b4:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3b6:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 3b8:	95 b3       	in	r25, 0x15	; 21
 3ba:	9d 7f       	andi	r25, 0xFD	; 253
 3bc:	95 bb       	out	0x15, r25	; 21
 3be:	32 e4       	ldi	r19, 0x42	; 66
 3c0:	3a 95       	dec	r19
 3c2:	f1 f7       	brne	.-4      	; 0x3c0 <LCD_Char+0x22>
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <LCD_Char+0x28>

	_delay_us(200);

	LCD_Port = (LCD_Port & 0x0F) | (data << 4); /* sending lower nibble */
 3c6:	25 b3       	in	r18, 0x15	; 21
 3c8:	30 e1       	ldi	r19, 0x10	; 16
 3ca:	83 9f       	mul	r24, r19
 3cc:	c0 01       	movw	r24, r0
 3ce:	11 24       	eor	r1, r1
 3d0:	92 2f       	mov	r25, r18
 3d2:	9f 70       	andi	r25, 0x0F	; 15
 3d4:	89 2b       	or	r24, r25
 3d6:	85 bb       	out	0x15, r24	; 21
	LCD_Port |= (1<<EN);
 3d8:	85 b3       	in	r24, 0x15	; 21
 3da:	82 60       	ori	r24, 0x02	; 2
 3dc:	85 bb       	out	0x15, r24	; 21
 3de:	00 00       	nop
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
 3e0:	85 b3       	in	r24, 0x15	; 21
 3e2:	8d 7f       	andi	r24, 0xFD	; 253
 3e4:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e6:	83 ef       	ldi	r24, 0xF3	; 243
 3e8:	91 e0       	ldi	r25, 0x01	; 1
 3ea:	01 97       	sbiw	r24, 0x01	; 1
 3ec:	f1 f7       	brne	.-4      	; 0x3ea <LCD_Char+0x4c>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <LCD_Char+0x52>
 3f0:	00 00       	nop
 3f2:	08 95       	ret

000003f4 <LCD_Init>:
	_delay_ms(2);
}

void LCD_Init (void)			/* LCD Initialize function */
{
	LCD_Dir = 0xFF;			/* Make LCD port direction as o/p */
 3f4:	8f ef       	ldi	r24, 0xFF	; 255
 3f6:	84 bb       	out	0x14, r24	; 20
 3f8:	87 e8       	ldi	r24, 0x87	; 135
 3fa:	93 e1       	ldi	r25, 0x13	; 19
 3fc:	01 97       	sbiw	r24, 0x01	; 1
 3fe:	f1 f7       	brne	.-4      	; 0x3fc <LCD_Init+0x8>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 402:	00 00       	nop
	_delay_ms(20);			/* LCD Power ON delay always >15ms */
	
	LCD_Command(0x02);		/* send for 4 bit initialization of LCD  */
 404:	82 e0       	ldi	r24, 0x02	; 2
 406:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
	LCD_Command(0x28);              /* 2 line, 5*7 matrix in 4-bit mode */
 40a:	88 e2       	ldi	r24, 0x28	; 40
 40c:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
	LCD_Command(0x0c);              /* Display on cursor off*/
 410:	8c e0       	ldi	r24, 0x0C	; 12
 412:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
	LCD_Command(0x06);              /* Increment cursor (shift cursor to right)*/
 416:	86 e0       	ldi	r24, 0x06	; 6
 418:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
	LCD_Command(0x01);              /* Clear display screen*/
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
 422:	83 ef       	ldi	r24, 0xF3	; 243
 424:	91 e0       	ldi	r25, 0x01	; 1
 426:	01 97       	sbiw	r24, 0x01	; 1
 428:	f1 f7       	brne	.-4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 42c:	00 00       	nop
 42e:	08 95       	ret

00000430 <LCD_String>:
	_delay_ms(2);
}


void LCD_String (char *str)		/* Send string to LCD function */
{
 430:	0f 93       	push	r16
 432:	1f 93       	push	r17
 434:	cf 93       	push	r28
 436:	df 93       	push	r29
 438:	8c 01       	movw	r16, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 43a:	c0 e0       	ldi	r28, 0x00	; 0
 43c:	d0 e0       	ldi	r29, 0x00	; 0
 43e:	03 c0       	rjmp	.+6      	; 0x446 <LCD_String+0x16>
	{
		LCD_Char (str[i]);
 440:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_Char>


void LCD_String (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 444:	21 96       	adiw	r28, 0x01	; 1
 446:	f8 01       	movw	r30, r16
 448:	ec 0f       	add	r30, r28
 44a:	fd 1f       	adc	r31, r29
 44c:	80 81       	ld	r24, Z
 44e:	81 11       	cpse	r24, r1
 450:	f7 cf       	rjmp	.-18     	; 0x440 <LCD_String+0x10>
	{
		LCD_Char (str[i]);
	}
}
 452:	df 91       	pop	r29
 454:	cf 91       	pop	r28
 456:	1f 91       	pop	r17
 458:	0f 91       	pop	r16
 45a:	08 95       	ret

0000045c <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD with xy position */
{
 45c:	cf 93       	push	r28
 45e:	df 93       	push	r29
 460:	ea 01       	movw	r28, r20
	if (row == 0 && pos<16)
 462:	81 11       	cpse	r24, r1
 464:	08 c0       	rjmp	.+16     	; 0x476 <LCD_String_xy+0x1a>
 466:	60 31       	cpi	r22, 0x10	; 16
 468:	30 f4       	brcc	.+12     	; 0x476 <LCD_String_xy+0x1a>
	LCD_Command((pos & 0x0F)|0x80);	/* Command of first row and required position<16 */
 46a:	86 2f       	mov	r24, r22
 46c:	8f 70       	andi	r24, 0x0F	; 15
 46e:	80 68       	ori	r24, 0x80	; 128
 470:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
 474:	09 c0       	rjmp	.+18     	; 0x488 <LCD_String_xy+0x2c>
	else if (row == 1 && pos<16)
 476:	81 30       	cpi	r24, 0x01	; 1
 478:	39 f4       	brne	.+14     	; 0x488 <LCD_String_xy+0x2c>
 47a:	60 31       	cpi	r22, 0x10	; 16
 47c:	28 f4       	brcc	.+10     	; 0x488 <LCD_String_xy+0x2c>
	LCD_Command((pos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
 47e:	86 2f       	mov	r24, r22
 480:	8f 70       	andi	r24, 0x0F	; 15
 482:	80 6c       	ori	r24, 0xC0	; 192
 484:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
	LCD_String(str);		/* Call LCD string function */
 488:	ce 01       	movw	r24, r28
 48a:	0e 94 18 02 	call	0x430	; 0x430 <LCD_String>
}
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	08 95       	ret

00000494 <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command (0x01);		/* Clear display */
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
 49a:	83 ef       	ldi	r24, 0xF3	; 243
 49c:	91 e0       	ldi	r25, 0x01	; 1
 49e:	01 97       	sbiw	r24, 0x01	; 1
 4a0:	f1 f7       	brne	.-4      	; 0x49e <LCD_Clear+0xa>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <LCD_Clear+0x10>
 4a4:	00 00       	nop
	_delay_ms(2);
	LCD_Command (0x80);		/* Cursor at home position */
 4a6:	80 e8       	ldi	r24, 0x80	; 128
 4a8:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_Command>
 4ac:	08 95       	ret

000004ae <main>:
//set the calibration weight
double calibrationweight = 0.082;
#endif


int main(void) {
 4ae:	cf 93       	push	r28
 4b0:	df 93       	push	r29
 4b2:	cd b7       	in	r28, 0x3d	; 61
 4b4:	de b7       	in	r29, 0x3e	; 62
 4b6:	c4 56       	subi	r28, 0x64	; 100
 4b8:	d1 09       	sbc	r29, r1
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	f8 94       	cli
 4be:	de bf       	out	0x3e, r29	; 62
 4c0:	0f be       	out	0x3f, r0	; 63
 4c2:	cd bf       	out	0x3d, r28	; 61

	
LCD_Init();
 4c4:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <LCD_Init>
LCD_Clear();
 4c8:	0e 94 4a 02 	call	0x494	; 0x494 <LCD_Clear>
LCD_String_xy(0,0," Weight:");
 4cc:	49 e6       	ldi	r20, 0x69	; 105
 4ce:	50 e0       	ldi	r21, 0x00	; 0
 4d0:	60 e0       	ldi	r22, 0x00	; 0
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	0e 94 2e 02 	call	0x45c	; 0x45c <LCD_String_xy>
	char printbuff[100];
DDRA=DDRA | (1<<0);
 4d8:	8a b3       	in	r24, 0x1a	; 26
 4da:	81 60       	ori	r24, 0x01	; 1
 4dc:	8a bb       	out	0x1a, r24	; 26
	//init hx711
	hx711_init(gain, scale, offset);
 4de:	00 91 64 00 	lds	r16, 0x0064	; 0x800064 <offset>
 4e2:	10 91 65 00 	lds	r17, 0x0065	; 0x800065 <offset+0x1>
 4e6:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <offset+0x2>
 4ea:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <offset+0x3>
 4ee:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 4f2:	50 91 61 00 	lds	r21, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 4f6:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 4fa:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 4fe:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <gain>
 502:	0e 94 60 01 	call	0x2c0	; 0x2c0 <hx711_init>
	
	
while(1){
		int32_t read = hx711_read();
 506:	0e 94 c6 00 	call	0x18c	; 0x18c <hx711_read>
		//ltoa(read, printbuff, 10);
		//get weight
		double weight = hx711_getweight();
 50a:	0e 94 24 01 	call	0x248	; 0x248 <hx711_getweight>
 50e:	4b 01       	movw	r8, r22
 510:	5c 01       	movw	r10, r24
		dtostrf(weight, 3, 3, printbuff);
 512:	ce 01       	movw	r24, r28
 514:	01 96       	adiw	r24, 0x01	; 1
 516:	7c 01       	movw	r14, r24
 518:	8c 01       	movw	r16, r24
 51a:	23 e0       	ldi	r18, 0x03	; 3
 51c:	43 e0       	ldi	r20, 0x03	; 3
 51e:	c5 01       	movw	r24, r10
 520:	b4 01       	movw	r22, r8
 522:	0e 94 52 04 	call	0x8a4	; 0x8a4 <dtostrf>
		strcat(printbuff, " kg   ");
 526:	d7 01       	movw	r26, r14
 528:	0d 90       	ld	r0, X+
 52a:	00 20       	and	r0, r0
 52c:	e9 f7       	brne	.-6      	; 0x528 <main+0x7a>
 52e:	11 97       	sbiw	r26, 0x01	; 1
 530:	87 e0       	ldi	r24, 0x07	; 7
 532:	e2 e7       	ldi	r30, 0x72	; 114
 534:	f0 e0       	ldi	r31, 0x00	; 0
 536:	01 90       	ld	r0, Z+
 538:	0d 92       	st	X+, r0
 53a:	8a 95       	dec	r24
 53c:	e1 f7       	brne	.-8      	; 0x536 <main+0x88>
		LCD_String_xy(1,0,printbuff);
 53e:	a7 01       	movw	r20, r14
 540:	60 e0       	ldi	r22, 0x00	; 0
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	0e 94 2e 02 	call	0x45c	; 0x45c <LCD_String_xy>
 548:	9f e9       	ldi	r25, 0x9F	; 159
 54a:	26 e8       	ldi	r18, 0x86	; 134
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	91 50       	subi	r25, 0x01	; 1
 550:	20 40       	sbci	r18, 0x00	; 0
 552:	80 40       	sbci	r24, 0x00	; 0
 554:	e1 f7       	brne	.-8      	; 0x54e <main+0xa0>
 556:	00 c0       	rjmp	.+0      	; 0x558 <main+0xaa>
 558:	00 00       	nop

		
	
		
	_delay_ms(500);	
		if (weight>10)
 55a:	20 e0       	ldi	r18, 0x00	; 0
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	40 e2       	ldi	r20, 0x20	; 32
 560:	51 e4       	ldi	r21, 0x41	; 65
 562:	c5 01       	movw	r24, r10
 564:	b4 01       	movw	r22, r8
 566:	0e 94 29 04 	call	0x852	; 0x852 <__gesf2>
 56a:	18 16       	cp	r1, r24
 56c:	1c f4       	brge	.+6      	; 0x574 <main+0xc6>
		{
		PORTA=(1<<0);
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	8b bb       	out	0x1b, r24	; 27
 572:	c9 cf       	rjmp	.-110    	; 0x506 <main+0x58>
		} 
		else
		{
			PORTA=(0<<0);
 574:	1b ba       	out	0x1b, r1	; 27
 576:	c7 cf       	rjmp	.-114    	; 0x506 <main+0x58>

00000578 <__subsf3>:
 578:	50 58       	subi	r21, 0x80	; 128

0000057a <__addsf3>:
 57a:	bb 27       	eor	r27, r27
 57c:	aa 27       	eor	r26, r26
 57e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__addsf3x>
 582:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__fp_round>
 586:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__fp_pscA>
 58a:	38 f0       	brcs	.+14     	; 0x59a <__addsf3+0x20>
 58c:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_pscB>
 590:	20 f0       	brcs	.+8      	; 0x59a <__addsf3+0x20>
 592:	39 f4       	brne	.+14     	; 0x5a2 <__addsf3+0x28>
 594:	9f 3f       	cpi	r25, 0xFF	; 255
 596:	19 f4       	brne	.+6      	; 0x59e <__addsf3+0x24>
 598:	26 f4       	brtc	.+8      	; 0x5a2 <__addsf3+0x28>
 59a:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__fp_nan>
 59e:	0e f4       	brtc	.+2      	; 0x5a2 <__addsf3+0x28>
 5a0:	e0 95       	com	r30
 5a2:	e7 fb       	bst	r30, 7
 5a4:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_inf>

000005a8 <__addsf3x>:
 5a8:	e9 2f       	mov	r30, r25
 5aa:	0e 94 00 04 	call	0x800	; 0x800 <__fp_split3>
 5ae:	58 f3       	brcs	.-42     	; 0x586 <__addsf3+0xc>
 5b0:	ba 17       	cp	r27, r26
 5b2:	62 07       	cpc	r22, r18
 5b4:	73 07       	cpc	r23, r19
 5b6:	84 07       	cpc	r24, r20
 5b8:	95 07       	cpc	r25, r21
 5ba:	20 f0       	brcs	.+8      	; 0x5c4 <__addsf3x+0x1c>
 5bc:	79 f4       	brne	.+30     	; 0x5dc <__addsf3x+0x34>
 5be:	a6 f5       	brtc	.+104    	; 0x628 <__addsf3x+0x80>
 5c0:	0c 94 22 04 	jmp	0x844	; 0x844 <__fp_zero>
 5c4:	0e f4       	brtc	.+2      	; 0x5c8 <__addsf3x+0x20>
 5c6:	e0 95       	com	r30
 5c8:	0b 2e       	mov	r0, r27
 5ca:	ba 2f       	mov	r27, r26
 5cc:	a0 2d       	mov	r26, r0
 5ce:	0b 01       	movw	r0, r22
 5d0:	b9 01       	movw	r22, r18
 5d2:	90 01       	movw	r18, r0
 5d4:	0c 01       	movw	r0, r24
 5d6:	ca 01       	movw	r24, r20
 5d8:	a0 01       	movw	r20, r0
 5da:	11 24       	eor	r1, r1
 5dc:	ff 27       	eor	r31, r31
 5de:	59 1b       	sub	r21, r25
 5e0:	99 f0       	breq	.+38     	; 0x608 <__addsf3x+0x60>
 5e2:	59 3f       	cpi	r21, 0xF9	; 249
 5e4:	50 f4       	brcc	.+20     	; 0x5fa <__addsf3x+0x52>
 5e6:	50 3e       	cpi	r21, 0xE0	; 224
 5e8:	68 f1       	brcs	.+90     	; 0x644 <__addsf3x+0x9c>
 5ea:	1a 16       	cp	r1, r26
 5ec:	f0 40       	sbci	r31, 0x00	; 0
 5ee:	a2 2f       	mov	r26, r18
 5f0:	23 2f       	mov	r18, r19
 5f2:	34 2f       	mov	r19, r20
 5f4:	44 27       	eor	r20, r20
 5f6:	58 5f       	subi	r21, 0xF8	; 248
 5f8:	f3 cf       	rjmp	.-26     	; 0x5e0 <__addsf3x+0x38>
 5fa:	46 95       	lsr	r20
 5fc:	37 95       	ror	r19
 5fe:	27 95       	ror	r18
 600:	a7 95       	ror	r26
 602:	f0 40       	sbci	r31, 0x00	; 0
 604:	53 95       	inc	r21
 606:	c9 f7       	brne	.-14     	; 0x5fa <__addsf3x+0x52>
 608:	7e f4       	brtc	.+30     	; 0x628 <__addsf3x+0x80>
 60a:	1f 16       	cp	r1, r31
 60c:	ba 0b       	sbc	r27, r26
 60e:	62 0b       	sbc	r22, r18
 610:	73 0b       	sbc	r23, r19
 612:	84 0b       	sbc	r24, r20
 614:	ba f0       	brmi	.+46     	; 0x644 <__addsf3x+0x9c>
 616:	91 50       	subi	r25, 0x01	; 1
 618:	a1 f0       	breq	.+40     	; 0x642 <__addsf3x+0x9a>
 61a:	ff 0f       	add	r31, r31
 61c:	bb 1f       	adc	r27, r27
 61e:	66 1f       	adc	r22, r22
 620:	77 1f       	adc	r23, r23
 622:	88 1f       	adc	r24, r24
 624:	c2 f7       	brpl	.-16     	; 0x616 <__addsf3x+0x6e>
 626:	0e c0       	rjmp	.+28     	; 0x644 <__addsf3x+0x9c>
 628:	ba 0f       	add	r27, r26
 62a:	62 1f       	adc	r22, r18
 62c:	73 1f       	adc	r23, r19
 62e:	84 1f       	adc	r24, r20
 630:	48 f4       	brcc	.+18     	; 0x644 <__addsf3x+0x9c>
 632:	87 95       	ror	r24
 634:	77 95       	ror	r23
 636:	67 95       	ror	r22
 638:	b7 95       	ror	r27
 63a:	f7 95       	ror	r31
 63c:	9e 3f       	cpi	r25, 0xFE	; 254
 63e:	08 f0       	brcs	.+2      	; 0x642 <__addsf3x+0x9a>
 640:	b0 cf       	rjmp	.-160    	; 0x5a2 <__addsf3+0x28>
 642:	93 95       	inc	r25
 644:	88 0f       	add	r24, r24
 646:	08 f0       	brcs	.+2      	; 0x64a <__addsf3x+0xa2>
 648:	99 27       	eor	r25, r25
 64a:	ee 0f       	add	r30, r30
 64c:	97 95       	ror	r25
 64e:	87 95       	ror	r24
 650:	08 95       	ret

00000652 <__divsf3>:
 652:	0e 94 3d 03 	call	0x67a	; 0x67a <__divsf3x>
 656:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__fp_round>
 65a:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_pscB>
 65e:	58 f0       	brcs	.+22     	; 0x676 <__divsf3+0x24>
 660:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__fp_pscA>
 664:	40 f0       	brcs	.+16     	; 0x676 <__divsf3+0x24>
 666:	29 f4       	brne	.+10     	; 0x672 <__divsf3+0x20>
 668:	5f 3f       	cpi	r21, 0xFF	; 255
 66a:	29 f0       	breq	.+10     	; 0x676 <__divsf3+0x24>
 66c:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_inf>
 670:	51 11       	cpse	r21, r1
 672:	0c 94 23 04 	jmp	0x846	; 0x846 <__fp_szero>
 676:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__fp_nan>

0000067a <__divsf3x>:
 67a:	0e 94 00 04 	call	0x800	; 0x800 <__fp_split3>
 67e:	68 f3       	brcs	.-38     	; 0x65a <__divsf3+0x8>

00000680 <__divsf3_pse>:
 680:	99 23       	and	r25, r25
 682:	b1 f3       	breq	.-20     	; 0x670 <__divsf3+0x1e>
 684:	55 23       	and	r21, r21
 686:	91 f3       	breq	.-28     	; 0x66c <__divsf3+0x1a>
 688:	95 1b       	sub	r25, r21
 68a:	55 0b       	sbc	r21, r21
 68c:	bb 27       	eor	r27, r27
 68e:	aa 27       	eor	r26, r26
 690:	62 17       	cp	r22, r18
 692:	73 07       	cpc	r23, r19
 694:	84 07       	cpc	r24, r20
 696:	38 f0       	brcs	.+14     	; 0x6a6 <__divsf3_pse+0x26>
 698:	9f 5f       	subi	r25, 0xFF	; 255
 69a:	5f 4f       	sbci	r21, 0xFF	; 255
 69c:	22 0f       	add	r18, r18
 69e:	33 1f       	adc	r19, r19
 6a0:	44 1f       	adc	r20, r20
 6a2:	aa 1f       	adc	r26, r26
 6a4:	a9 f3       	breq	.-22     	; 0x690 <__divsf3_pse+0x10>
 6a6:	35 d0       	rcall	.+106    	; 0x712 <__divsf3_pse+0x92>
 6a8:	0e 2e       	mov	r0, r30
 6aa:	3a f0       	brmi	.+14     	; 0x6ba <__divsf3_pse+0x3a>
 6ac:	e0 e8       	ldi	r30, 0x80	; 128
 6ae:	32 d0       	rcall	.+100    	; 0x714 <__divsf3_pse+0x94>
 6b0:	91 50       	subi	r25, 0x01	; 1
 6b2:	50 40       	sbci	r21, 0x00	; 0
 6b4:	e6 95       	lsr	r30
 6b6:	00 1c       	adc	r0, r0
 6b8:	ca f7       	brpl	.-14     	; 0x6ac <__divsf3_pse+0x2c>
 6ba:	2b d0       	rcall	.+86     	; 0x712 <__divsf3_pse+0x92>
 6bc:	fe 2f       	mov	r31, r30
 6be:	29 d0       	rcall	.+82     	; 0x712 <__divsf3_pse+0x92>
 6c0:	66 0f       	add	r22, r22
 6c2:	77 1f       	adc	r23, r23
 6c4:	88 1f       	adc	r24, r24
 6c6:	bb 1f       	adc	r27, r27
 6c8:	26 17       	cp	r18, r22
 6ca:	37 07       	cpc	r19, r23
 6cc:	48 07       	cpc	r20, r24
 6ce:	ab 07       	cpc	r26, r27
 6d0:	b0 e8       	ldi	r27, 0x80	; 128
 6d2:	09 f0       	breq	.+2      	; 0x6d6 <__divsf3_pse+0x56>
 6d4:	bb 0b       	sbc	r27, r27
 6d6:	80 2d       	mov	r24, r0
 6d8:	bf 01       	movw	r22, r30
 6da:	ff 27       	eor	r31, r31
 6dc:	93 58       	subi	r25, 0x83	; 131
 6de:	5f 4f       	sbci	r21, 0xFF	; 255
 6e0:	3a f0       	brmi	.+14     	; 0x6f0 <__divsf3_pse+0x70>
 6e2:	9e 3f       	cpi	r25, 0xFE	; 254
 6e4:	51 05       	cpc	r21, r1
 6e6:	78 f0       	brcs	.+30     	; 0x706 <__divsf3_pse+0x86>
 6e8:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_inf>
 6ec:	0c 94 23 04 	jmp	0x846	; 0x846 <__fp_szero>
 6f0:	5f 3f       	cpi	r21, 0xFF	; 255
 6f2:	e4 f3       	brlt	.-8      	; 0x6ec <__divsf3_pse+0x6c>
 6f4:	98 3e       	cpi	r25, 0xE8	; 232
 6f6:	d4 f3       	brlt	.-12     	; 0x6ec <__divsf3_pse+0x6c>
 6f8:	86 95       	lsr	r24
 6fa:	77 95       	ror	r23
 6fc:	67 95       	ror	r22
 6fe:	b7 95       	ror	r27
 700:	f7 95       	ror	r31
 702:	9f 5f       	subi	r25, 0xFF	; 255
 704:	c9 f7       	brne	.-14     	; 0x6f8 <__divsf3_pse+0x78>
 706:	88 0f       	add	r24, r24
 708:	91 1d       	adc	r25, r1
 70a:	96 95       	lsr	r25
 70c:	87 95       	ror	r24
 70e:	97 f9       	bld	r25, 7
 710:	08 95       	ret
 712:	e1 e0       	ldi	r30, 0x01	; 1
 714:	66 0f       	add	r22, r22
 716:	77 1f       	adc	r23, r23
 718:	88 1f       	adc	r24, r24
 71a:	bb 1f       	adc	r27, r27
 71c:	62 17       	cp	r22, r18
 71e:	73 07       	cpc	r23, r19
 720:	84 07       	cpc	r24, r20
 722:	ba 07       	cpc	r27, r26
 724:	20 f0       	brcs	.+8      	; 0x72e <__divsf3_pse+0xae>
 726:	62 1b       	sub	r22, r18
 728:	73 0b       	sbc	r23, r19
 72a:	84 0b       	sbc	r24, r20
 72c:	ba 0b       	sbc	r27, r26
 72e:	ee 1f       	adc	r30, r30
 730:	88 f7       	brcc	.-30     	; 0x714 <__divsf3_pse+0x94>
 732:	e0 95       	com	r30
 734:	08 95       	ret

00000736 <__floatunsisf>:
 736:	e8 94       	clt
 738:	09 c0       	rjmp	.+18     	; 0x74c <__floatsisf+0x12>

0000073a <__floatsisf>:
 73a:	97 fb       	bst	r25, 7
 73c:	3e f4       	brtc	.+14     	; 0x74c <__floatsisf+0x12>
 73e:	90 95       	com	r25
 740:	80 95       	com	r24
 742:	70 95       	com	r23
 744:	61 95       	neg	r22
 746:	7f 4f       	sbci	r23, 0xFF	; 255
 748:	8f 4f       	sbci	r24, 0xFF	; 255
 74a:	9f 4f       	sbci	r25, 0xFF	; 255
 74c:	99 23       	and	r25, r25
 74e:	a9 f0       	breq	.+42     	; 0x77a <__floatsisf+0x40>
 750:	f9 2f       	mov	r31, r25
 752:	96 e9       	ldi	r25, 0x96	; 150
 754:	bb 27       	eor	r27, r27
 756:	93 95       	inc	r25
 758:	f6 95       	lsr	r31
 75a:	87 95       	ror	r24
 75c:	77 95       	ror	r23
 75e:	67 95       	ror	r22
 760:	b7 95       	ror	r27
 762:	f1 11       	cpse	r31, r1
 764:	f8 cf       	rjmp	.-16     	; 0x756 <__floatsisf+0x1c>
 766:	fa f4       	brpl	.+62     	; 0x7a6 <__floatsisf+0x6c>
 768:	bb 0f       	add	r27, r27
 76a:	11 f4       	brne	.+4      	; 0x770 <__floatsisf+0x36>
 76c:	60 ff       	sbrs	r22, 0
 76e:	1b c0       	rjmp	.+54     	; 0x7a6 <__floatsisf+0x6c>
 770:	6f 5f       	subi	r22, 0xFF	; 255
 772:	7f 4f       	sbci	r23, 0xFF	; 255
 774:	8f 4f       	sbci	r24, 0xFF	; 255
 776:	9f 4f       	sbci	r25, 0xFF	; 255
 778:	16 c0       	rjmp	.+44     	; 0x7a6 <__floatsisf+0x6c>
 77a:	88 23       	and	r24, r24
 77c:	11 f0       	breq	.+4      	; 0x782 <__floatsisf+0x48>
 77e:	96 e9       	ldi	r25, 0x96	; 150
 780:	11 c0       	rjmp	.+34     	; 0x7a4 <__floatsisf+0x6a>
 782:	77 23       	and	r23, r23
 784:	21 f0       	breq	.+8      	; 0x78e <__floatsisf+0x54>
 786:	9e e8       	ldi	r25, 0x8E	; 142
 788:	87 2f       	mov	r24, r23
 78a:	76 2f       	mov	r23, r22
 78c:	05 c0       	rjmp	.+10     	; 0x798 <__floatsisf+0x5e>
 78e:	66 23       	and	r22, r22
 790:	71 f0       	breq	.+28     	; 0x7ae <__floatsisf+0x74>
 792:	96 e8       	ldi	r25, 0x86	; 134
 794:	86 2f       	mov	r24, r22
 796:	70 e0       	ldi	r23, 0x00	; 0
 798:	60 e0       	ldi	r22, 0x00	; 0
 79a:	2a f0       	brmi	.+10     	; 0x7a6 <__floatsisf+0x6c>
 79c:	9a 95       	dec	r25
 79e:	66 0f       	add	r22, r22
 7a0:	77 1f       	adc	r23, r23
 7a2:	88 1f       	adc	r24, r24
 7a4:	da f7       	brpl	.-10     	; 0x79c <__floatsisf+0x62>
 7a6:	88 0f       	add	r24, r24
 7a8:	96 95       	lsr	r25
 7aa:	87 95       	ror	r24
 7ac:	97 f9       	bld	r25, 7
 7ae:	08 95       	ret

000007b0 <__fp_inf>:
 7b0:	97 f9       	bld	r25, 7
 7b2:	9f 67       	ori	r25, 0x7F	; 127
 7b4:	80 e8       	ldi	r24, 0x80	; 128
 7b6:	70 e0       	ldi	r23, 0x00	; 0
 7b8:	60 e0       	ldi	r22, 0x00	; 0
 7ba:	08 95       	ret

000007bc <__fp_nan>:
 7bc:	9f ef       	ldi	r25, 0xFF	; 255
 7be:	80 ec       	ldi	r24, 0xC0	; 192
 7c0:	08 95       	ret

000007c2 <__fp_pscA>:
 7c2:	00 24       	eor	r0, r0
 7c4:	0a 94       	dec	r0
 7c6:	16 16       	cp	r1, r22
 7c8:	17 06       	cpc	r1, r23
 7ca:	18 06       	cpc	r1, r24
 7cc:	09 06       	cpc	r0, r25
 7ce:	08 95       	ret

000007d0 <__fp_pscB>:
 7d0:	00 24       	eor	r0, r0
 7d2:	0a 94       	dec	r0
 7d4:	12 16       	cp	r1, r18
 7d6:	13 06       	cpc	r1, r19
 7d8:	14 06       	cpc	r1, r20
 7da:	05 06       	cpc	r0, r21
 7dc:	08 95       	ret

000007de <__fp_round>:
 7de:	09 2e       	mov	r0, r25
 7e0:	03 94       	inc	r0
 7e2:	00 0c       	add	r0, r0
 7e4:	11 f4       	brne	.+4      	; 0x7ea <__fp_round+0xc>
 7e6:	88 23       	and	r24, r24
 7e8:	52 f0       	brmi	.+20     	; 0x7fe <__fp_round+0x20>
 7ea:	bb 0f       	add	r27, r27
 7ec:	40 f4       	brcc	.+16     	; 0x7fe <__fp_round+0x20>
 7ee:	bf 2b       	or	r27, r31
 7f0:	11 f4       	brne	.+4      	; 0x7f6 <__fp_round+0x18>
 7f2:	60 ff       	sbrs	r22, 0
 7f4:	04 c0       	rjmp	.+8      	; 0x7fe <__fp_round+0x20>
 7f6:	6f 5f       	subi	r22, 0xFF	; 255
 7f8:	7f 4f       	sbci	r23, 0xFF	; 255
 7fa:	8f 4f       	sbci	r24, 0xFF	; 255
 7fc:	9f 4f       	sbci	r25, 0xFF	; 255
 7fe:	08 95       	ret

00000800 <__fp_split3>:
 800:	57 fd       	sbrc	r21, 7
 802:	90 58       	subi	r25, 0x80	; 128
 804:	44 0f       	add	r20, r20
 806:	55 1f       	adc	r21, r21
 808:	59 f0       	breq	.+22     	; 0x820 <__fp_splitA+0x10>
 80a:	5f 3f       	cpi	r21, 0xFF	; 255
 80c:	71 f0       	breq	.+28     	; 0x82a <__fp_splitA+0x1a>
 80e:	47 95       	ror	r20

00000810 <__fp_splitA>:
 810:	88 0f       	add	r24, r24
 812:	97 fb       	bst	r25, 7
 814:	99 1f       	adc	r25, r25
 816:	61 f0       	breq	.+24     	; 0x830 <__fp_splitA+0x20>
 818:	9f 3f       	cpi	r25, 0xFF	; 255
 81a:	79 f0       	breq	.+30     	; 0x83a <__fp_splitA+0x2a>
 81c:	87 95       	ror	r24
 81e:	08 95       	ret
 820:	12 16       	cp	r1, r18
 822:	13 06       	cpc	r1, r19
 824:	14 06       	cpc	r1, r20
 826:	55 1f       	adc	r21, r21
 828:	f2 cf       	rjmp	.-28     	; 0x80e <__fp_split3+0xe>
 82a:	46 95       	lsr	r20
 82c:	f1 df       	rcall	.-30     	; 0x810 <__fp_splitA>
 82e:	08 c0       	rjmp	.+16     	; 0x840 <__fp_splitA+0x30>
 830:	16 16       	cp	r1, r22
 832:	17 06       	cpc	r1, r23
 834:	18 06       	cpc	r1, r24
 836:	99 1f       	adc	r25, r25
 838:	f1 cf       	rjmp	.-30     	; 0x81c <__fp_splitA+0xc>
 83a:	86 95       	lsr	r24
 83c:	71 05       	cpc	r23, r1
 83e:	61 05       	cpc	r22, r1
 840:	08 94       	sec
 842:	08 95       	ret

00000844 <__fp_zero>:
 844:	e8 94       	clt

00000846 <__fp_szero>:
 846:	bb 27       	eor	r27, r27
 848:	66 27       	eor	r22, r22
 84a:	77 27       	eor	r23, r23
 84c:	cb 01       	movw	r24, r22
 84e:	97 f9       	bld	r25, 7
 850:	08 95       	ret

00000852 <__gesf2>:
 852:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_cmp>
 856:	08 f4       	brcc	.+2      	; 0x85a <__gesf2+0x8>
 858:	8f ef       	ldi	r24, 0xFF	; 255
 85a:	08 95       	ret

0000085c <__fp_cmp>:
 85c:	99 0f       	add	r25, r25
 85e:	00 08       	sbc	r0, r0
 860:	55 0f       	add	r21, r21
 862:	aa 0b       	sbc	r26, r26
 864:	e0 e8       	ldi	r30, 0x80	; 128
 866:	fe ef       	ldi	r31, 0xFE	; 254
 868:	16 16       	cp	r1, r22
 86a:	17 06       	cpc	r1, r23
 86c:	e8 07       	cpc	r30, r24
 86e:	f9 07       	cpc	r31, r25
 870:	c0 f0       	brcs	.+48     	; 0x8a2 <__stack+0x43>
 872:	12 16       	cp	r1, r18
 874:	13 06       	cpc	r1, r19
 876:	e4 07       	cpc	r30, r20
 878:	f5 07       	cpc	r31, r21
 87a:	98 f0       	brcs	.+38     	; 0x8a2 <__stack+0x43>
 87c:	62 1b       	sub	r22, r18
 87e:	73 0b       	sbc	r23, r19
 880:	84 0b       	sbc	r24, r20
 882:	95 0b       	sbc	r25, r21
 884:	39 f4       	brne	.+14     	; 0x894 <__stack+0x35>
 886:	0a 26       	eor	r0, r26
 888:	61 f0       	breq	.+24     	; 0x8a2 <__stack+0x43>
 88a:	23 2b       	or	r18, r19
 88c:	24 2b       	or	r18, r20
 88e:	25 2b       	or	r18, r21
 890:	21 f4       	brne	.+8      	; 0x89a <__stack+0x3b>
 892:	08 95       	ret
 894:	0a 26       	eor	r0, r26
 896:	09 f4       	brne	.+2      	; 0x89a <__stack+0x3b>
 898:	a1 40       	sbci	r26, 0x01	; 1
 89a:	a6 95       	lsr	r26
 89c:	8f ef       	ldi	r24, 0xFF	; 255
 89e:	81 1d       	adc	r24, r1
 8a0:	81 1d       	adc	r24, r1
 8a2:	08 95       	ret

000008a4 <dtostrf>:
 8a4:	ef 92       	push	r14
 8a6:	0f 93       	push	r16
 8a8:	1f 93       	push	r17
 8aa:	cf 93       	push	r28
 8ac:	df 93       	push	r29
 8ae:	e8 01       	movw	r28, r16
 8b0:	47 fd       	sbrc	r20, 7
 8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <dtostrf+0x14>
 8b4:	34 e0       	ldi	r19, 0x04	; 4
 8b6:	01 c0       	rjmp	.+2      	; 0x8ba <dtostrf+0x16>
 8b8:	34 e1       	ldi	r19, 0x14	; 20
 8ba:	04 2e       	mov	r0, r20
 8bc:	00 0c       	add	r0, r0
 8be:	55 0b       	sbc	r21, r21
 8c0:	57 ff       	sbrs	r21, 7
 8c2:	03 c0       	rjmp	.+6      	; 0x8ca <dtostrf+0x26>
 8c4:	51 95       	neg	r21
 8c6:	41 95       	neg	r20
 8c8:	51 09       	sbc	r21, r1
 8ca:	e3 2e       	mov	r14, r19
 8cc:	02 2f       	mov	r16, r18
 8ce:	24 2f       	mov	r18, r20
 8d0:	ae 01       	movw	r20, r28
 8d2:	0e 94 72 04 	call	0x8e4	; 0x8e4 <dtoa_prf>
 8d6:	ce 01       	movw	r24, r28
 8d8:	df 91       	pop	r29
 8da:	cf 91       	pop	r28
 8dc:	1f 91       	pop	r17
 8de:	0f 91       	pop	r16
 8e0:	ef 90       	pop	r14
 8e2:	08 95       	ret

000008e4 <dtoa_prf>:
 8e4:	a9 e0       	ldi	r26, 0x09	; 9
 8e6:	b0 e0       	ldi	r27, 0x00	; 0
 8e8:	e8 e7       	ldi	r30, 0x78	; 120
 8ea:	f4 e0       	ldi	r31, 0x04	; 4
 8ec:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__prologue_saves__+0xc>
 8f0:	6a 01       	movw	r12, r20
 8f2:	12 2f       	mov	r17, r18
 8f4:	b0 2e       	mov	r11, r16
 8f6:	2b e3       	ldi	r18, 0x3B	; 59
 8f8:	20 17       	cp	r18, r16
 8fa:	20 f0       	brcs	.+8      	; 0x904 <dtoa_prf+0x20>
 8fc:	ff 24       	eor	r15, r15
 8fe:	f3 94       	inc	r15
 900:	f0 0e       	add	r15, r16
 902:	02 c0       	rjmp	.+4      	; 0x908 <dtoa_prf+0x24>
 904:	2c e3       	ldi	r18, 0x3C	; 60
 906:	f2 2e       	mov	r15, r18
 908:	0f 2d       	mov	r16, r15
 90a:	27 e0       	ldi	r18, 0x07	; 7
 90c:	ae 01       	movw	r20, r28
 90e:	4f 5f       	subi	r20, 0xFF	; 255
 910:	5f 4f       	sbci	r21, 0xFF	; 255
 912:	0e 94 cc 05 	call	0xb98	; 0xb98 <__ftoa_engine>
 916:	bc 01       	movw	r22, r24
 918:	49 81       	ldd	r20, Y+1	; 0x01
 91a:	84 2f       	mov	r24, r20
 91c:	89 70       	andi	r24, 0x09	; 9
 91e:	81 30       	cpi	r24, 0x01	; 1
 920:	31 f0       	breq	.+12     	; 0x92e <dtoa_prf+0x4a>
 922:	e1 fc       	sbrc	r14, 1
 924:	06 c0       	rjmp	.+12     	; 0x932 <dtoa_prf+0x4e>
 926:	e0 fe       	sbrs	r14, 0
 928:	06 c0       	rjmp	.+12     	; 0x936 <dtoa_prf+0x52>
 92a:	90 e2       	ldi	r25, 0x20	; 32
 92c:	05 c0       	rjmp	.+10     	; 0x938 <dtoa_prf+0x54>
 92e:	9d e2       	ldi	r25, 0x2D	; 45
 930:	03 c0       	rjmp	.+6      	; 0x938 <dtoa_prf+0x54>
 932:	9b e2       	ldi	r25, 0x2B	; 43
 934:	01 c0       	rjmp	.+2      	; 0x938 <dtoa_prf+0x54>
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	5e 2d       	mov	r21, r14
 93a:	50 71       	andi	r21, 0x10	; 16
 93c:	43 ff       	sbrs	r20, 3
 93e:	3c c0       	rjmp	.+120    	; 0x9b8 <dtoa_prf+0xd4>
 940:	91 11       	cpse	r25, r1
 942:	02 c0       	rjmp	.+4      	; 0x948 <dtoa_prf+0x64>
 944:	83 e0       	ldi	r24, 0x03	; 3
 946:	01 c0       	rjmp	.+2      	; 0x94a <dtoa_prf+0x66>
 948:	84 e0       	ldi	r24, 0x04	; 4
 94a:	81 17       	cp	r24, r17
 94c:	18 f4       	brcc	.+6      	; 0x954 <dtoa_prf+0x70>
 94e:	21 2f       	mov	r18, r17
 950:	28 1b       	sub	r18, r24
 952:	01 c0       	rjmp	.+2      	; 0x956 <dtoa_prf+0x72>
 954:	20 e0       	ldi	r18, 0x00	; 0
 956:	51 11       	cpse	r21, r1
 958:	0b c0       	rjmp	.+22     	; 0x970 <dtoa_prf+0x8c>
 95a:	f6 01       	movw	r30, r12
 95c:	82 2f       	mov	r24, r18
 95e:	30 e2       	ldi	r19, 0x20	; 32
 960:	88 23       	and	r24, r24
 962:	19 f0       	breq	.+6      	; 0x96a <dtoa_prf+0x86>
 964:	31 93       	st	Z+, r19
 966:	81 50       	subi	r24, 0x01	; 1
 968:	fb cf       	rjmp	.-10     	; 0x960 <dtoa_prf+0x7c>
 96a:	c2 0e       	add	r12, r18
 96c:	d1 1c       	adc	r13, r1
 96e:	20 e0       	ldi	r18, 0x00	; 0
 970:	99 23       	and	r25, r25
 972:	29 f0       	breq	.+10     	; 0x97e <dtoa_prf+0x9a>
 974:	d6 01       	movw	r26, r12
 976:	9c 93       	st	X, r25
 978:	f6 01       	movw	r30, r12
 97a:	31 96       	adiw	r30, 0x01	; 1
 97c:	6f 01       	movw	r12, r30
 97e:	c6 01       	movw	r24, r12
 980:	03 96       	adiw	r24, 0x03	; 3
 982:	e2 fe       	sbrs	r14, 2
 984:	0a c0       	rjmp	.+20     	; 0x99a <dtoa_prf+0xb6>
 986:	3e e4       	ldi	r19, 0x4E	; 78
 988:	d6 01       	movw	r26, r12
 98a:	3c 93       	st	X, r19
 98c:	41 e4       	ldi	r20, 0x41	; 65
 98e:	11 96       	adiw	r26, 0x01	; 1
 990:	4c 93       	st	X, r20
 992:	11 97       	sbiw	r26, 0x01	; 1
 994:	12 96       	adiw	r26, 0x02	; 2
 996:	3c 93       	st	X, r19
 998:	06 c0       	rjmp	.+12     	; 0x9a6 <dtoa_prf+0xc2>
 99a:	3e e6       	ldi	r19, 0x6E	; 110
 99c:	f6 01       	movw	r30, r12
 99e:	30 83       	st	Z, r19
 9a0:	41 e6       	ldi	r20, 0x61	; 97
 9a2:	41 83       	std	Z+1, r20	; 0x01
 9a4:	32 83       	std	Z+2, r19	; 0x02
 9a6:	fc 01       	movw	r30, r24
 9a8:	32 2f       	mov	r19, r18
 9aa:	40 e2       	ldi	r20, 0x20	; 32
 9ac:	33 23       	and	r19, r19
 9ae:	09 f4       	brne	.+2      	; 0x9b2 <dtoa_prf+0xce>
 9b0:	42 c0       	rjmp	.+132    	; 0xa36 <dtoa_prf+0x152>
 9b2:	41 93       	st	Z+, r20
 9b4:	31 50       	subi	r19, 0x01	; 1
 9b6:	fa cf       	rjmp	.-12     	; 0x9ac <dtoa_prf+0xc8>
 9b8:	42 ff       	sbrs	r20, 2
 9ba:	44 c0       	rjmp	.+136    	; 0xa44 <dtoa_prf+0x160>
 9bc:	91 11       	cpse	r25, r1
 9be:	02 c0       	rjmp	.+4      	; 0x9c4 <dtoa_prf+0xe0>
 9c0:	83 e0       	ldi	r24, 0x03	; 3
 9c2:	01 c0       	rjmp	.+2      	; 0x9c6 <dtoa_prf+0xe2>
 9c4:	84 e0       	ldi	r24, 0x04	; 4
 9c6:	81 17       	cp	r24, r17
 9c8:	18 f4       	brcc	.+6      	; 0x9d0 <dtoa_prf+0xec>
 9ca:	21 2f       	mov	r18, r17
 9cc:	28 1b       	sub	r18, r24
 9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <dtoa_prf+0xee>
 9d0:	20 e0       	ldi	r18, 0x00	; 0
 9d2:	51 11       	cpse	r21, r1
 9d4:	0b c0       	rjmp	.+22     	; 0x9ec <dtoa_prf+0x108>
 9d6:	f6 01       	movw	r30, r12
 9d8:	82 2f       	mov	r24, r18
 9da:	30 e2       	ldi	r19, 0x20	; 32
 9dc:	88 23       	and	r24, r24
 9de:	19 f0       	breq	.+6      	; 0x9e6 <dtoa_prf+0x102>
 9e0:	31 93       	st	Z+, r19
 9e2:	81 50       	subi	r24, 0x01	; 1
 9e4:	fb cf       	rjmp	.-10     	; 0x9dc <dtoa_prf+0xf8>
 9e6:	c2 0e       	add	r12, r18
 9e8:	d1 1c       	adc	r13, r1
 9ea:	20 e0       	ldi	r18, 0x00	; 0
 9ec:	99 23       	and	r25, r25
 9ee:	29 f0       	breq	.+10     	; 0x9fa <dtoa_prf+0x116>
 9f0:	d6 01       	movw	r26, r12
 9f2:	9c 93       	st	X, r25
 9f4:	f6 01       	movw	r30, r12
 9f6:	31 96       	adiw	r30, 0x01	; 1
 9f8:	6f 01       	movw	r12, r30
 9fa:	c6 01       	movw	r24, r12
 9fc:	03 96       	adiw	r24, 0x03	; 3
 9fe:	e2 fe       	sbrs	r14, 2
 a00:	0b c0       	rjmp	.+22     	; 0xa18 <dtoa_prf+0x134>
 a02:	39 e4       	ldi	r19, 0x49	; 73
 a04:	d6 01       	movw	r26, r12
 a06:	3c 93       	st	X, r19
 a08:	3e e4       	ldi	r19, 0x4E	; 78
 a0a:	11 96       	adiw	r26, 0x01	; 1
 a0c:	3c 93       	st	X, r19
 a0e:	11 97       	sbiw	r26, 0x01	; 1
 a10:	36 e4       	ldi	r19, 0x46	; 70
 a12:	12 96       	adiw	r26, 0x02	; 2
 a14:	3c 93       	st	X, r19
 a16:	07 c0       	rjmp	.+14     	; 0xa26 <dtoa_prf+0x142>
 a18:	39 e6       	ldi	r19, 0x69	; 105
 a1a:	f6 01       	movw	r30, r12
 a1c:	30 83       	st	Z, r19
 a1e:	3e e6       	ldi	r19, 0x6E	; 110
 a20:	31 83       	std	Z+1, r19	; 0x01
 a22:	36 e6       	ldi	r19, 0x66	; 102
 a24:	32 83       	std	Z+2, r19	; 0x02
 a26:	fc 01       	movw	r30, r24
 a28:	32 2f       	mov	r19, r18
 a2a:	40 e2       	ldi	r20, 0x20	; 32
 a2c:	33 23       	and	r19, r19
 a2e:	19 f0       	breq	.+6      	; 0xa36 <dtoa_prf+0x152>
 a30:	41 93       	st	Z+, r20
 a32:	31 50       	subi	r19, 0x01	; 1
 a34:	fb cf       	rjmp	.-10     	; 0xa2c <dtoa_prf+0x148>
 a36:	fc 01       	movw	r30, r24
 a38:	e2 0f       	add	r30, r18
 a3a:	f1 1d       	adc	r31, r1
 a3c:	10 82       	st	Z, r1
 a3e:	8e ef       	ldi	r24, 0xFE	; 254
 a40:	9f ef       	ldi	r25, 0xFF	; 255
 a42:	a6 c0       	rjmp	.+332    	; 0xb90 <dtoa_prf+0x2ac>
 a44:	21 e0       	ldi	r18, 0x01	; 1
 a46:	30 e0       	ldi	r19, 0x00	; 0
 a48:	91 11       	cpse	r25, r1
 a4a:	02 c0       	rjmp	.+4      	; 0xa50 <dtoa_prf+0x16c>
 a4c:	20 e0       	ldi	r18, 0x00	; 0
 a4e:	30 e0       	ldi	r19, 0x00	; 0
 a50:	16 16       	cp	r1, r22
 a52:	17 06       	cpc	r1, r23
 a54:	1c f4       	brge	.+6      	; 0xa5c <dtoa_prf+0x178>
 a56:	fb 01       	movw	r30, r22
 a58:	31 96       	adiw	r30, 0x01	; 1
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <dtoa_prf+0x17c>
 a5c:	e1 e0       	ldi	r30, 0x01	; 1
 a5e:	f0 e0       	ldi	r31, 0x00	; 0
 a60:	2e 0f       	add	r18, r30
 a62:	3f 1f       	adc	r19, r31
 a64:	bb 20       	and	r11, r11
 a66:	21 f0       	breq	.+8      	; 0xa70 <dtoa_prf+0x18c>
 a68:	eb 2d       	mov	r30, r11
 a6a:	f0 e0       	ldi	r31, 0x00	; 0
 a6c:	31 96       	adiw	r30, 0x01	; 1
 a6e:	02 c0       	rjmp	.+4      	; 0xa74 <dtoa_prf+0x190>
 a70:	e0 e0       	ldi	r30, 0x00	; 0
 a72:	f0 e0       	ldi	r31, 0x00	; 0
 a74:	2e 0f       	add	r18, r30
 a76:	3f 1f       	adc	r19, r31
 a78:	e1 2f       	mov	r30, r17
 a7a:	f0 e0       	ldi	r31, 0x00	; 0
 a7c:	2e 17       	cp	r18, r30
 a7e:	3f 07       	cpc	r19, r31
 a80:	1c f4       	brge	.+6      	; 0xa88 <dtoa_prf+0x1a4>
 a82:	12 1b       	sub	r17, r18
 a84:	21 2f       	mov	r18, r17
 a86:	01 c0       	rjmp	.+2      	; 0xa8a <dtoa_prf+0x1a6>
 a88:	20 e0       	ldi	r18, 0x00	; 0
 a8a:	8e 2d       	mov	r24, r14
 a8c:	88 71       	andi	r24, 0x18	; 24
 a8e:	59 f4       	brne	.+22     	; 0xaa6 <dtoa_prf+0x1c2>
 a90:	f6 01       	movw	r30, r12
 a92:	82 2f       	mov	r24, r18
 a94:	30 e2       	ldi	r19, 0x20	; 32
 a96:	88 23       	and	r24, r24
 a98:	19 f0       	breq	.+6      	; 0xaa0 <dtoa_prf+0x1bc>
 a9a:	31 93       	st	Z+, r19
 a9c:	81 50       	subi	r24, 0x01	; 1
 a9e:	fb cf       	rjmp	.-10     	; 0xa96 <dtoa_prf+0x1b2>
 aa0:	c2 0e       	add	r12, r18
 aa2:	d1 1c       	adc	r13, r1
 aa4:	20 e0       	ldi	r18, 0x00	; 0
 aa6:	99 23       	and	r25, r25
 aa8:	29 f0       	breq	.+10     	; 0xab4 <dtoa_prf+0x1d0>
 aaa:	d6 01       	movw	r26, r12
 aac:	9c 93       	st	X, r25
 aae:	f6 01       	movw	r30, r12
 ab0:	31 96       	adiw	r30, 0x01	; 1
 ab2:	6f 01       	movw	r12, r30
 ab4:	51 11       	cpse	r21, r1
 ab6:	0b c0       	rjmp	.+22     	; 0xace <dtoa_prf+0x1ea>
 ab8:	f6 01       	movw	r30, r12
 aba:	82 2f       	mov	r24, r18
 abc:	90 e3       	ldi	r25, 0x30	; 48
 abe:	88 23       	and	r24, r24
 ac0:	19 f0       	breq	.+6      	; 0xac8 <dtoa_prf+0x1e4>
 ac2:	91 93       	st	Z+, r25
 ac4:	81 50       	subi	r24, 0x01	; 1
 ac6:	fb cf       	rjmp	.-10     	; 0xabe <dtoa_prf+0x1da>
 ac8:	c2 0e       	add	r12, r18
 aca:	d1 1c       	adc	r13, r1
 acc:	20 e0       	ldi	r18, 0x00	; 0
 ace:	0f 2d       	mov	r16, r15
 ad0:	06 0f       	add	r16, r22
 ad2:	9a 81       	ldd	r25, Y+2	; 0x02
 ad4:	34 2f       	mov	r19, r20
 ad6:	30 71       	andi	r19, 0x10	; 16
 ad8:	44 ff       	sbrs	r20, 4
 ada:	03 c0       	rjmp	.+6      	; 0xae2 <dtoa_prf+0x1fe>
 adc:	91 33       	cpi	r25, 0x31	; 49
 ade:	09 f4       	brne	.+2      	; 0xae2 <dtoa_prf+0x1fe>
 ae0:	01 50       	subi	r16, 0x01	; 1
 ae2:	10 16       	cp	r1, r16
 ae4:	24 f4       	brge	.+8      	; 0xaee <dtoa_prf+0x20a>
 ae6:	09 30       	cpi	r16, 0x09	; 9
 ae8:	18 f0       	brcs	.+6      	; 0xaf0 <dtoa_prf+0x20c>
 aea:	08 e0       	ldi	r16, 0x08	; 8
 aec:	01 c0       	rjmp	.+2      	; 0xaf0 <dtoa_prf+0x20c>
 aee:	01 e0       	ldi	r16, 0x01	; 1
 af0:	ab 01       	movw	r20, r22
 af2:	77 ff       	sbrs	r23, 7
 af4:	02 c0       	rjmp	.+4      	; 0xafa <dtoa_prf+0x216>
 af6:	40 e0       	ldi	r20, 0x00	; 0
 af8:	50 e0       	ldi	r21, 0x00	; 0
 afa:	fb 01       	movw	r30, r22
 afc:	e4 1b       	sub	r30, r20
 afe:	f5 0b       	sbc	r31, r21
 b00:	a1 e0       	ldi	r26, 0x01	; 1
 b02:	b0 e0       	ldi	r27, 0x00	; 0
 b04:	ac 0f       	add	r26, r28
 b06:	bd 1f       	adc	r27, r29
 b08:	ea 0f       	add	r30, r26
 b0a:	fb 1f       	adc	r31, r27
 b0c:	8e e2       	ldi	r24, 0x2E	; 46
 b0e:	a8 2e       	mov	r10, r24
 b10:	4b 01       	movw	r8, r22
 b12:	80 1a       	sub	r8, r16
 b14:	91 08       	sbc	r9, r1
 b16:	0b 2d       	mov	r16, r11
 b18:	10 e0       	ldi	r17, 0x00	; 0
 b1a:	11 95       	neg	r17
 b1c:	01 95       	neg	r16
 b1e:	11 09       	sbc	r17, r1
 b20:	4f 3f       	cpi	r20, 0xFF	; 255
 b22:	bf ef       	ldi	r27, 0xFF	; 255
 b24:	5b 07       	cpc	r21, r27
 b26:	21 f4       	brne	.+8      	; 0xb30 <dtoa_prf+0x24c>
 b28:	d6 01       	movw	r26, r12
 b2a:	ac 92       	st	X, r10
 b2c:	11 96       	adiw	r26, 0x01	; 1
 b2e:	6d 01       	movw	r12, r26
 b30:	64 17       	cp	r22, r20
 b32:	75 07       	cpc	r23, r21
 b34:	2c f0       	brlt	.+10     	; 0xb40 <dtoa_prf+0x25c>
 b36:	84 16       	cp	r8, r20
 b38:	95 06       	cpc	r9, r21
 b3a:	14 f4       	brge	.+4      	; 0xb40 <dtoa_prf+0x25c>
 b3c:	81 81       	ldd	r24, Z+1	; 0x01
 b3e:	01 c0       	rjmp	.+2      	; 0xb42 <dtoa_prf+0x25e>
 b40:	80 e3       	ldi	r24, 0x30	; 48
 b42:	41 50       	subi	r20, 0x01	; 1
 b44:	51 09       	sbc	r21, r1
 b46:	31 96       	adiw	r30, 0x01	; 1
 b48:	d6 01       	movw	r26, r12
 b4a:	11 96       	adiw	r26, 0x01	; 1
 b4c:	7d 01       	movw	r14, r26
 b4e:	40 17       	cp	r20, r16
 b50:	51 07       	cpc	r21, r17
 b52:	24 f0       	brlt	.+8      	; 0xb5c <dtoa_prf+0x278>
 b54:	d6 01       	movw	r26, r12
 b56:	8c 93       	st	X, r24
 b58:	67 01       	movw	r12, r14
 b5a:	e2 cf       	rjmp	.-60     	; 0xb20 <dtoa_prf+0x23c>
 b5c:	64 17       	cp	r22, r20
 b5e:	75 07       	cpc	r23, r21
 b60:	39 f4       	brne	.+14     	; 0xb70 <dtoa_prf+0x28c>
 b62:	96 33       	cpi	r25, 0x36	; 54
 b64:	20 f4       	brcc	.+8      	; 0xb6e <dtoa_prf+0x28a>
 b66:	95 33       	cpi	r25, 0x35	; 53
 b68:	19 f4       	brne	.+6      	; 0xb70 <dtoa_prf+0x28c>
 b6a:	31 11       	cpse	r19, r1
 b6c:	01 c0       	rjmp	.+2      	; 0xb70 <dtoa_prf+0x28c>
 b6e:	81 e3       	ldi	r24, 0x31	; 49
 b70:	f6 01       	movw	r30, r12
 b72:	80 83       	st	Z, r24
 b74:	f7 01       	movw	r30, r14
 b76:	82 2f       	mov	r24, r18
 b78:	90 e2       	ldi	r25, 0x20	; 32
 b7a:	88 23       	and	r24, r24
 b7c:	19 f0       	breq	.+6      	; 0xb84 <dtoa_prf+0x2a0>
 b7e:	91 93       	st	Z+, r25
 b80:	81 50       	subi	r24, 0x01	; 1
 b82:	fb cf       	rjmp	.-10     	; 0xb7a <dtoa_prf+0x296>
 b84:	f7 01       	movw	r30, r14
 b86:	e2 0f       	add	r30, r18
 b88:	f1 1d       	adc	r31, r1
 b8a:	10 82       	st	Z, r1
 b8c:	80 e0       	ldi	r24, 0x00	; 0
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	29 96       	adiw	r28, 0x09	; 9
 b92:	ec e0       	ldi	r30, 0x0C	; 12
 b94:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__epilogue_restores__+0xc>

00000b98 <__ftoa_engine>:
 b98:	28 30       	cpi	r18, 0x08	; 8
 b9a:	08 f0       	brcs	.+2      	; 0xb9e <__ftoa_engine+0x6>
 b9c:	27 e0       	ldi	r18, 0x07	; 7
 b9e:	33 27       	eor	r19, r19
 ba0:	da 01       	movw	r26, r20
 ba2:	99 0f       	add	r25, r25
 ba4:	31 1d       	adc	r19, r1
 ba6:	87 fd       	sbrc	r24, 7
 ba8:	91 60       	ori	r25, 0x01	; 1
 baa:	00 96       	adiw	r24, 0x00	; 0
 bac:	61 05       	cpc	r22, r1
 bae:	71 05       	cpc	r23, r1
 bb0:	39 f4       	brne	.+14     	; 0xbc0 <__ftoa_engine+0x28>
 bb2:	32 60       	ori	r19, 0x02	; 2
 bb4:	2e 5f       	subi	r18, 0xFE	; 254
 bb6:	3d 93       	st	X+, r19
 bb8:	30 e3       	ldi	r19, 0x30	; 48
 bba:	2a 95       	dec	r18
 bbc:	e1 f7       	brne	.-8      	; 0xbb6 <__ftoa_engine+0x1e>
 bbe:	08 95       	ret
 bc0:	9f 3f       	cpi	r25, 0xFF	; 255
 bc2:	30 f0       	brcs	.+12     	; 0xbd0 <__ftoa_engine+0x38>
 bc4:	80 38       	cpi	r24, 0x80	; 128
 bc6:	71 05       	cpc	r23, r1
 bc8:	61 05       	cpc	r22, r1
 bca:	09 f0       	breq	.+2      	; 0xbce <__ftoa_engine+0x36>
 bcc:	3c 5f       	subi	r19, 0xFC	; 252
 bce:	3c 5f       	subi	r19, 0xFC	; 252
 bd0:	3d 93       	st	X+, r19
 bd2:	91 30       	cpi	r25, 0x01	; 1
 bd4:	08 f0       	brcs	.+2      	; 0xbd8 <__ftoa_engine+0x40>
 bd6:	80 68       	ori	r24, 0x80	; 128
 bd8:	91 1d       	adc	r25, r1
 bda:	df 93       	push	r29
 bdc:	cf 93       	push	r28
 bde:	1f 93       	push	r17
 be0:	0f 93       	push	r16
 be2:	ff 92       	push	r15
 be4:	ef 92       	push	r14
 be6:	19 2f       	mov	r17, r25
 be8:	98 7f       	andi	r25, 0xF8	; 248
 bea:	96 95       	lsr	r25
 bec:	e9 2f       	mov	r30, r25
 bee:	96 95       	lsr	r25
 bf0:	96 95       	lsr	r25
 bf2:	e9 0f       	add	r30, r25
 bf4:	ff 27       	eor	r31, r31
 bf6:	e2 55       	subi	r30, 0x52	; 82
 bf8:	ff 4f       	sbci	r31, 0xFF	; 255
 bfa:	99 27       	eor	r25, r25
 bfc:	33 27       	eor	r19, r19
 bfe:	ee 24       	eor	r14, r14
 c00:	ff 24       	eor	r15, r15
 c02:	a7 01       	movw	r20, r14
 c04:	e7 01       	movw	r28, r14
 c06:	05 90       	lpm	r0, Z+
 c08:	08 94       	sec
 c0a:	07 94       	ror	r0
 c0c:	28 f4       	brcc	.+10     	; 0xc18 <__ftoa_engine+0x80>
 c0e:	36 0f       	add	r19, r22
 c10:	e7 1e       	adc	r14, r23
 c12:	f8 1e       	adc	r15, r24
 c14:	49 1f       	adc	r20, r25
 c16:	51 1d       	adc	r21, r1
 c18:	66 0f       	add	r22, r22
 c1a:	77 1f       	adc	r23, r23
 c1c:	88 1f       	adc	r24, r24
 c1e:	99 1f       	adc	r25, r25
 c20:	06 94       	lsr	r0
 c22:	a1 f7       	brne	.-24     	; 0xc0c <__ftoa_engine+0x74>
 c24:	05 90       	lpm	r0, Z+
 c26:	07 94       	ror	r0
 c28:	28 f4       	brcc	.+10     	; 0xc34 <__ftoa_engine+0x9c>
 c2a:	e7 0e       	add	r14, r23
 c2c:	f8 1e       	adc	r15, r24
 c2e:	49 1f       	adc	r20, r25
 c30:	56 1f       	adc	r21, r22
 c32:	c1 1d       	adc	r28, r1
 c34:	77 0f       	add	r23, r23
 c36:	88 1f       	adc	r24, r24
 c38:	99 1f       	adc	r25, r25
 c3a:	66 1f       	adc	r22, r22
 c3c:	06 94       	lsr	r0
 c3e:	a1 f7       	brne	.-24     	; 0xc28 <__ftoa_engine+0x90>
 c40:	05 90       	lpm	r0, Z+
 c42:	07 94       	ror	r0
 c44:	28 f4       	brcc	.+10     	; 0xc50 <__ftoa_engine+0xb8>
 c46:	f8 0e       	add	r15, r24
 c48:	49 1f       	adc	r20, r25
 c4a:	56 1f       	adc	r21, r22
 c4c:	c7 1f       	adc	r28, r23
 c4e:	d1 1d       	adc	r29, r1
 c50:	88 0f       	add	r24, r24
 c52:	99 1f       	adc	r25, r25
 c54:	66 1f       	adc	r22, r22
 c56:	77 1f       	adc	r23, r23
 c58:	06 94       	lsr	r0
 c5a:	a1 f7       	brne	.-24     	; 0xc44 <__ftoa_engine+0xac>
 c5c:	05 90       	lpm	r0, Z+
 c5e:	07 94       	ror	r0
 c60:	20 f4       	brcc	.+8      	; 0xc6a <__ftoa_engine+0xd2>
 c62:	49 0f       	add	r20, r25
 c64:	56 1f       	adc	r21, r22
 c66:	c7 1f       	adc	r28, r23
 c68:	d8 1f       	adc	r29, r24
 c6a:	99 0f       	add	r25, r25
 c6c:	66 1f       	adc	r22, r22
 c6e:	77 1f       	adc	r23, r23
 c70:	88 1f       	adc	r24, r24
 c72:	06 94       	lsr	r0
 c74:	a9 f7       	brne	.-22     	; 0xc60 <__ftoa_engine+0xc8>
 c76:	84 91       	lpm	r24, Z
 c78:	10 95       	com	r17
 c7a:	17 70       	andi	r17, 0x07	; 7
 c7c:	41 f0       	breq	.+16     	; 0xc8e <__ftoa_engine+0xf6>
 c7e:	d6 95       	lsr	r29
 c80:	c7 95       	ror	r28
 c82:	57 95       	ror	r21
 c84:	47 95       	ror	r20
 c86:	f7 94       	ror	r15
 c88:	e7 94       	ror	r14
 c8a:	1a 95       	dec	r17
 c8c:	c1 f7       	brne	.-16     	; 0xc7e <__ftoa_engine+0xe6>
 c8e:	e4 e5       	ldi	r30, 0x54	; 84
 c90:	f0 e0       	ldi	r31, 0x00	; 0
 c92:	68 94       	set
 c94:	15 90       	lpm	r1, Z+
 c96:	15 91       	lpm	r17, Z+
 c98:	35 91       	lpm	r19, Z+
 c9a:	65 91       	lpm	r22, Z+
 c9c:	95 91       	lpm	r25, Z+
 c9e:	05 90       	lpm	r0, Z+
 ca0:	7f e2       	ldi	r23, 0x2F	; 47
 ca2:	73 95       	inc	r23
 ca4:	e1 18       	sub	r14, r1
 ca6:	f1 0a       	sbc	r15, r17
 ca8:	43 0b       	sbc	r20, r19
 caa:	56 0b       	sbc	r21, r22
 cac:	c9 0b       	sbc	r28, r25
 cae:	d0 09       	sbc	r29, r0
 cb0:	c0 f7       	brcc	.-16     	; 0xca2 <__ftoa_engine+0x10a>
 cb2:	e1 0c       	add	r14, r1
 cb4:	f1 1e       	adc	r15, r17
 cb6:	43 1f       	adc	r20, r19
 cb8:	56 1f       	adc	r21, r22
 cba:	c9 1f       	adc	r28, r25
 cbc:	d0 1d       	adc	r29, r0
 cbe:	7e f4       	brtc	.+30     	; 0xcde <__ftoa_engine+0x146>
 cc0:	70 33       	cpi	r23, 0x30	; 48
 cc2:	11 f4       	brne	.+4      	; 0xcc8 <__ftoa_engine+0x130>
 cc4:	8a 95       	dec	r24
 cc6:	e6 cf       	rjmp	.-52     	; 0xc94 <__ftoa_engine+0xfc>
 cc8:	e8 94       	clt
 cca:	01 50       	subi	r16, 0x01	; 1
 ccc:	30 f0       	brcs	.+12     	; 0xcda <__ftoa_engine+0x142>
 cce:	08 0f       	add	r16, r24
 cd0:	0a f4       	brpl	.+2      	; 0xcd4 <__ftoa_engine+0x13c>
 cd2:	00 27       	eor	r16, r16
 cd4:	02 17       	cp	r16, r18
 cd6:	08 f4       	brcc	.+2      	; 0xcda <__ftoa_engine+0x142>
 cd8:	20 2f       	mov	r18, r16
 cda:	23 95       	inc	r18
 cdc:	02 2f       	mov	r16, r18
 cde:	7a 33       	cpi	r23, 0x3A	; 58
 ce0:	28 f0       	brcs	.+10     	; 0xcec <__ftoa_engine+0x154>
 ce2:	79 e3       	ldi	r23, 0x39	; 57
 ce4:	7d 93       	st	X+, r23
 ce6:	2a 95       	dec	r18
 ce8:	e9 f7       	brne	.-6      	; 0xce4 <__ftoa_engine+0x14c>
 cea:	10 c0       	rjmp	.+32     	; 0xd0c <__ftoa_engine+0x174>
 cec:	7d 93       	st	X+, r23
 cee:	2a 95       	dec	r18
 cf0:	89 f6       	brne	.-94     	; 0xc94 <__ftoa_engine+0xfc>
 cf2:	06 94       	lsr	r0
 cf4:	97 95       	ror	r25
 cf6:	67 95       	ror	r22
 cf8:	37 95       	ror	r19
 cfa:	17 95       	ror	r17
 cfc:	17 94       	ror	r1
 cfe:	e1 18       	sub	r14, r1
 d00:	f1 0a       	sbc	r15, r17
 d02:	43 0b       	sbc	r20, r19
 d04:	56 0b       	sbc	r21, r22
 d06:	c9 0b       	sbc	r28, r25
 d08:	d0 09       	sbc	r29, r0
 d0a:	98 f0       	brcs	.+38     	; 0xd32 <__ftoa_engine+0x19a>
 d0c:	23 95       	inc	r18
 d0e:	7e 91       	ld	r23, -X
 d10:	73 95       	inc	r23
 d12:	7a 33       	cpi	r23, 0x3A	; 58
 d14:	08 f0       	brcs	.+2      	; 0xd18 <__ftoa_engine+0x180>
 d16:	70 e3       	ldi	r23, 0x30	; 48
 d18:	7c 93       	st	X, r23
 d1a:	20 13       	cpse	r18, r16
 d1c:	b8 f7       	brcc	.-18     	; 0xd0c <__ftoa_engine+0x174>
 d1e:	7e 91       	ld	r23, -X
 d20:	70 61       	ori	r23, 0x10	; 16
 d22:	7d 93       	st	X+, r23
 d24:	30 f0       	brcs	.+12     	; 0xd32 <__ftoa_engine+0x19a>
 d26:	83 95       	inc	r24
 d28:	71 e3       	ldi	r23, 0x31	; 49
 d2a:	7d 93       	st	X+, r23
 d2c:	70 e3       	ldi	r23, 0x30	; 48
 d2e:	2a 95       	dec	r18
 d30:	e1 f7       	brne	.-8      	; 0xd2a <__ftoa_engine+0x192>
 d32:	11 24       	eor	r1, r1
 d34:	ef 90       	pop	r14
 d36:	ff 90       	pop	r15
 d38:	0f 91       	pop	r16
 d3a:	1f 91       	pop	r17
 d3c:	cf 91       	pop	r28
 d3e:	df 91       	pop	r29
 d40:	99 27       	eor	r25, r25
 d42:	87 fd       	sbrc	r24, 7
 d44:	90 95       	com	r25
 d46:	08 95       	ret

00000d48 <__prologue_saves__>:
 d48:	2f 92       	push	r2
 d4a:	3f 92       	push	r3
 d4c:	4f 92       	push	r4
 d4e:	5f 92       	push	r5
 d50:	6f 92       	push	r6
 d52:	7f 92       	push	r7
 d54:	8f 92       	push	r8
 d56:	9f 92       	push	r9
 d58:	af 92       	push	r10
 d5a:	bf 92       	push	r11
 d5c:	cf 92       	push	r12
 d5e:	df 92       	push	r13
 d60:	ef 92       	push	r14
 d62:	ff 92       	push	r15
 d64:	0f 93       	push	r16
 d66:	1f 93       	push	r17
 d68:	cf 93       	push	r28
 d6a:	df 93       	push	r29
 d6c:	cd b7       	in	r28, 0x3d	; 61
 d6e:	de b7       	in	r29, 0x3e	; 62
 d70:	ca 1b       	sub	r28, r26
 d72:	db 0b       	sbc	r29, r27
 d74:	0f b6       	in	r0, 0x3f	; 63
 d76:	f8 94       	cli
 d78:	de bf       	out	0x3e, r29	; 62
 d7a:	0f be       	out	0x3f, r0	; 63
 d7c:	cd bf       	out	0x3d, r28	; 61
 d7e:	09 94       	ijmp

00000d80 <__epilogue_restores__>:
 d80:	2a 88       	ldd	r2, Y+18	; 0x12
 d82:	39 88       	ldd	r3, Y+17	; 0x11
 d84:	48 88       	ldd	r4, Y+16	; 0x10
 d86:	5f 84       	ldd	r5, Y+15	; 0x0f
 d88:	6e 84       	ldd	r6, Y+14	; 0x0e
 d8a:	7d 84       	ldd	r7, Y+13	; 0x0d
 d8c:	8c 84       	ldd	r8, Y+12	; 0x0c
 d8e:	9b 84       	ldd	r9, Y+11	; 0x0b
 d90:	aa 84       	ldd	r10, Y+10	; 0x0a
 d92:	b9 84       	ldd	r11, Y+9	; 0x09
 d94:	c8 84       	ldd	r12, Y+8	; 0x08
 d96:	df 80       	ldd	r13, Y+7	; 0x07
 d98:	ee 80       	ldd	r14, Y+6	; 0x06
 d9a:	fd 80       	ldd	r15, Y+5	; 0x05
 d9c:	0c 81       	ldd	r16, Y+4	; 0x04
 d9e:	1b 81       	ldd	r17, Y+3	; 0x03
 da0:	aa 81       	ldd	r26, Y+2	; 0x02
 da2:	b9 81       	ldd	r27, Y+1	; 0x01
 da4:	ce 0f       	add	r28, r30
 da6:	d1 1d       	adc	r29, r1
 da8:	0f b6       	in	r0, 0x3f	; 63
 daa:	f8 94       	cli
 dac:	de bf       	out	0x3e, r29	; 62
 dae:	0f be       	out	0x3f, r0	; 63
 db0:	cd bf       	out	0x3d, r28	; 61
 db2:	ed 01       	movw	r28, r26
 db4:	08 95       	ret

00000db6 <_exit>:
 db6:	f8 94       	cli

00000db8 <__stop_program>:
 db8:	ff cf       	rjmp	.-2      	; 0xdb8 <__stop_program>
